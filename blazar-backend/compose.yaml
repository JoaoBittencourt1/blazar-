services:
  php:
    image: php:8.4-fpm
    container_name: blazar_php
    volumes:
      - .:/var/www/html
      - ./.docker/config/php/php.ini:/usr/local/etc/php/php.ini
    environment:
      - SYMFONY_ENV=dev
    depends_on:
      - mongodb
    build:
      context: .
      dockerfile: ./.docker/Dockerfile
    networks:
      - blazar_backend_network

  nginx:
    image: nginx:alpine
    container_name: blazar_nginx
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./.docker/config/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - blazar_backend_network

  mongodb:
    image: mongo:latest
    container_name: blazar_mongodb
    hostname: mongodb
    volumes:
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
      - ./seeders/mongodb:/seeders
      - mongodb-data:/data/db/
      - mongodb-log:/var/log/mongodb/
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongodb
      MONGO_INITDB_ROOT_PASSWORD: blazar
      MONGO_INITDB_DATABASE: blazar
    ports:
      - "27017:27017"
    networks:
      - blazar_backend_network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongodb
      ME_CONFIG_MONGODB_ADMINPASSWORD: blazar
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_SERVER: 'mongodb'
      ME_CONFIG_BASICAUTH_USERNAME: mongodb
      ME_CONFIG_BASICAUTH_PASSWORD: blazar
    ports:
      - 8081:8081
    networks:
      - blazar_backend_network
    depends_on:
      - mongodb

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  mongodb-data:
    driver: local
    name: mongo-data
  mongodb-log:
    driver: local

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###


###> doctrine/mongodb-odm-bundle ###
  mongodb_data:
###< doctrine/mongodb-odm-bundle ###
    name: mongo-log

networks:
  blazar_backend_network:
    driver: bridge